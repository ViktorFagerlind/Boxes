// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: boxes.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ColumnType int32

const (
	ColumnType_UNUSED   ColumnType = 0
	ColumnType_INTEGER  ColumnType = 1
	ColumnType_REAL     ColumnType = 2
	ColumnType_TEXT     ColumnType = 3
	ColumnType_DATETIME ColumnType = 4
)

// Enum value maps for ColumnType.
var (
	ColumnType_name = map[int32]string{
		0: "UNUSED",
		1: "INTEGER",
		2: "REAL",
		3: "TEXT",
		4: "DATETIME",
	}
	ColumnType_value = map[string]int32{
		"UNUSED":   0,
		"INTEGER":  1,
		"REAL":     2,
		"TEXT":     3,
		"DATETIME": 4,
	}
)

func (x ColumnType) Enum() *ColumnType {
	p := new(ColumnType)
	*p = x
	return p
}

func (x ColumnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnType) Descriptor() protoreflect.EnumDescriptor {
	return file_boxes_proto_enumTypes[0].Descriptor()
}

func (ColumnType) Type() protoreflect.EnumType {
	return &file_boxes_proto_enumTypes[0]
}

func (x ColumnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnType.Descriptor instead.
func (ColumnType) EnumDescriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{0}
}

type TableName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TableName) Reset() {
	*x = TableName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableName) ProtoMessage() {}

func (x *TableName) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableName.ProtoReflect.Descriptor instead.
func (*TableName) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{1}
}

func (x *TableName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TableNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableNames []string `protobuf:"bytes,1,rep,name=table_names,json=tableNames,proto3" json:"table_names,omitempty"`
}

func (x *TableNames) Reset() {
	*x = TableNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableNames) ProtoMessage() {}

func (x *TableNames) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableNames.ProtoReflect.Descriptor instead.
func (*TableNames) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{2}
}

func (x *TableNames) GetTableNames() []string {
	if x != nil {
		return x.TableNames
	}
	return nil
}

type TableSchemas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSchemas []*TableSchema `protobuf:"bytes,1,rep,name=table_schemas,json=tableSchemas,proto3" json:"table_schemas,omitempty"`
}

func (x *TableSchemas) Reset() {
	*x = TableSchemas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSchemas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchemas) ProtoMessage() {}

func (x *TableSchemas) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchemas.ProtoReflect.Descriptor instead.
func (*TableSchemas) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{3}
}

func (x *TableSchemas) GetTableSchemas() []*TableSchema {
	if x != nil {
		return x.TableSchemas
	}
	return nil
}

type TableSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnSchemas []*ColumnSchema `protobuf:"bytes,1,rep,name=column_schemas,json=columnSchemas,proto3" json:"column_schemas,omitempty"`
}

func (x *TableSchema) Reset() {
	*x = TableSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchema) ProtoMessage() {}

func (x *TableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchema.ProtoReflect.Descriptor instead.
func (*TableSchema) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{4}
}

func (x *TableSchema) GetColumnSchemas() []*ColumnSchema {
	if x != nil {
		return x.ColumnSchemas
	}
	return nil
}

type ColumnSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type ColumnType `protobuf:"varint,2,opt,name=type,proto3,enum=boxes.ColumnType" json:"type,omitempty"`
}

func (x *ColumnSchema) Reset() {
	*x = ColumnSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnSchema) ProtoMessage() {}

func (x *ColumnSchema) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnSchema.ProtoReflect.Descriptor instead.
func (*ColumnSchema) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{5}
}

func (x *ColumnSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnSchema) GetType() ColumnType {
	if x != nil {
		return x.Type
	}
	return ColumnType_UNUSED
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*ColumnValues `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{6}
}

func (x *Table) GetColumns() []*ColumnValues {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ColumnValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrValues []string  `protobuf:"bytes,1,rep,name=str_values,json=strValues,proto3" json:"str_values,omitempty"`
	NumValues []float64 `protobuf:"fixed64,2,rep,packed,name=num_values,json=numValues,proto3" json:"num_values,omitempty"`
}

func (x *ColumnValues) Reset() {
	*x = ColumnValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnValues) ProtoMessage() {}

func (x *ColumnValues) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnValues.ProtoReflect.Descriptor instead.
func (*ColumnValues) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{7}
}

func (x *ColumnValues) GetStrValues() []string {
	if x != nil {
		return x.StrValues
	}
	return nil
}

func (x *ColumnValues) GetNumValues() []float64 {
	if x != nil {
		return x.NumValues
	}
	return nil
}

type DoubleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []float64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *DoubleList) Reset() {
	*x = DoubleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleList) ProtoMessage() {}

func (x *DoubleList) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleList.ProtoReflect.Descriptor instead.
func (*DoubleList) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{8}
}

func (x *DoubleList) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type DoubleValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DoubleValue) Reset() {
	*x = DoubleValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleValue) ProtoMessage() {}

func (x *DoubleValue) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleValue.ProtoReflect.Descriptor instead.
func (*DoubleValue) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{9}
}

func (x *DoubleValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q           string       `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	ColumnTypes []ColumnType `protobuf:"varint,2,rep,packed,name=column_types,json=columnTypes,proto3,enum=boxes.ColumnType" json:"column_types,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{10}
}

func (x *Query) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *Query) GetColumnTypes() []ColumnType {
	if x != nil {
		return x.ColumnTypes
	}
	return nil
}

type ConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YamlPath string `protobuf:"bytes,1,opt,name=yamlPath,proto3" json:"yamlPath,omitempty"`
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigFile) GetYamlPath() string {
	if x != nil {
		return x.YamlPath
	}
	return ""
}

type ChartCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charts []*Chart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
}

func (x *ChartCollection) Reset() {
	*x = ChartCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartCollection) ProtoMessage() {}

func (x *ChartCollection) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartCollection.ProtoReflect.Descriptor instead.
func (*ChartCollection) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{12}
}

func (x *ChartCollection) GetCharts() []*Chart {
	if x != nil {
		return x.Charts
	}
	return nil
}

type Chart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Category string  `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Plots    []*Plot `protobuf:"bytes,3,rep,name=plots,proto3" json:"plots,omitempty"`
}

func (x *Chart) Reset() {
	*x = Chart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart) ProtoMessage() {}

func (x *Chart) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chart.ProtoReflect.Descriptor instead.
func (*Chart) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{13}
}

func (x *Chart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chart) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Chart) GetPlots() []*Plot {
	if x != nil {
		return x.Plots
	}
	return nil
}

type Plot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Color   uint32 `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"`
	Filled  bool   `protobuf:"varint,4,opt,name=filled,proto3" json:"filled,omitempty"`
	Circles bool   `protobuf:"varint,5,opt,name=circles,proto3" json:"circles,omitempty"`
}

func (x *Plot) Reset() {
	*x = Plot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plot) ProtoMessage() {}

func (x *Plot) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plot.ProtoReflect.Descriptor instead.
func (*Plot) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{14}
}

func (x *Plot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plot) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Plot) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *Plot) GetFilled() bool {
	if x != nil {
		return x.Filled
	}
	return false
}

func (x *Plot) GetCircles() bool {
	if x != nil {
		return x.Circles
	}
	return false
}

type PlotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	XColumnName string `protobuf:"bytes,2,opt,name=xColumnName,proto3" json:"xColumnName,omitempty"`
	YColumnName string `protobuf:"bytes,3,opt,name=yColumnName,proto3" json:"yColumnName,omitempty"`
	Plot        *Plot  `protobuf:"bytes,4,opt,name=plot,proto3" json:"plot,omitempty"`
}

func (x *PlotInfo) Reset() {
	*x = PlotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotInfo) ProtoMessage() {}

func (x *PlotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotInfo.ProtoReflect.Descriptor instead.
func (*PlotInfo) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{15}
}

func (x *PlotInfo) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *PlotInfo) GetXColumnName() string {
	if x != nil {
		return x.XColumnName
	}
	return ""
}

func (x *PlotInfo) GetYColumnName() string {
	if x != nil {
		return x.YColumnName
	}
	return ""
}

func (x *PlotInfo) GetPlot() *Plot {
	if x != nil {
		return x.Plot
	}
	return nil
}

type ChartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chart     *Chart      `protobuf:"bytes,1,opt,name=chart,proto3" json:"chart,omitempty"`
	PlotInfos []*PlotInfo `protobuf:"bytes,2,rep,name=plotInfos,proto3" json:"plotInfos,omitempty"`
}

func (x *ChartInfo) Reset() {
	*x = ChartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartInfo) ProtoMessage() {}

func (x *ChartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartInfo.ProtoReflect.Descriptor instead.
func (*ChartInfo) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{16}
}

func (x *ChartInfo) GetChart() *Chart {
	if x != nil {
		return x.Chart
	}
	return nil
}

func (x *ChartInfo) GetPlotInfos() []*PlotInfo {
	if x != nil {
		return x.PlotInfos
	}
	return nil
}

type PlotName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *PlotName) Reset() {
	*x = PlotName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlotName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotName) ProtoMessage() {}

func (x *PlotName) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotName.ProtoReflect.Descriptor instead.
func (*PlotName) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{17}
}

func (x *PlotName) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type ChartName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *ChartName) Reset() {
	*x = ChartName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartName) ProtoMessage() {}

func (x *ChartName) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartName.ProtoReflect.Descriptor instead.
func (*ChartName) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{18}
}

func (x *ChartName) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type PlotValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XValues []string  `protobuf:"bytes,1,rep,name=xValues,proto3" json:"xValues,omitempty"`          // TODO: must currently be dates
	YValues []float64 `protobuf:"fixed64,2,rep,packed,name=yValues,proto3" json:"yValues,omitempty"` // TODO: must currently be doubles
}

func (x *PlotValues) Reset() {
	*x = PlotValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlotValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotValues) ProtoMessage() {}

func (x *PlotValues) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotValues.ProtoReflect.Descriptor instead.
func (*PlotValues) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{19}
}

func (x *PlotValues) GetXValues() []string {
	if x != nil {
		return x.XValues
	}
	return nil
}

func (x *PlotValues) GetYValues() []float64 {
	if x != nil {
		return x.YValues
	}
	return nil
}

type TableCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table []*TableInfo `protobuf:"bytes,1,rep,name=table,proto3" json:"table,omitempty"`
}

func (x *TableCollection) Reset() {
	*x = TableCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCollection) ProtoMessage() {}

func (x *TableCollection) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCollection.ProtoReflect.Descriptor instead.
func (*TableCollection) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{20}
}

func (x *TableCollection) GetTable() []*TableInfo {
	if x != nil {
		return x.Table
	}
	return nil
}

type TableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema *TableSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *TableInfo) Reset() {
	*x = TableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boxes_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableInfo) ProtoMessage() {}

func (x *TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_boxes_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableInfo.ProtoReflect.Descriptor instead.
func (*TableInfo) Descriptor() ([]byte, []int) {
	return file_boxes_proto_rawDescGZIP(), []int{21}
}

func (x *TableInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableInfo) GetSchema() *TableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

var File_boxes_proto protoreflect.FileDescriptor

var file_boxes_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x0a,
	0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d,
	0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x47, 0x0a,
	0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x37, 0x0a,
	0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x22, 0x49, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3a, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x73, 0x22, 0x49, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x05,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x71, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x79, 0x61, 0x6d, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x79, 0x61, 0x6d, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x22, 0x5a, 0x0a,
	0x05, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x50, 0x6c,
	0x6f, 0x74, 0x52, 0x05, 0x70, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x04, 0x50, 0x6c, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x69, 0x72, 0x63, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x70, 0x6c, 0x6f,
	0x74, 0x22, 0x5e, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x50, 0x6c,
	0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x1c, 0x0a, 0x08, 0x50, 0x6c, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x22,
	0x1d, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x40,
	0x0a, 0x0a, 0x50, 0x6c, 0x6f, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x39, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4b, 0x0a, 0x09, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2a, 0x47, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x04, 0x32, 0xaa, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11,
	0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x13, 0x2e, 0x62, 0x6f, 0x78, 0x65,
	0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0c,
	0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x32, 0xd3,
	0x01, 0x0a, 0x0a, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x73, 0x12, 0x2e, 0x0a,
	0x03, 0x4d, 0x61, 0x78, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x03, 0x4d, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x07, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x6f,
	0x78, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x11, 0x2e, 0x62, 0x6f,
	0x78, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x00, 0x32, 0x3a, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00,
	0x32, 0xd6, 0x04, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x0a,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x0c, 0x2e,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x0c, 0x2e, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x6f, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x6f, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x6f,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x11,
	0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x1a, 0x13, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0c, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0b, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x2e,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a,
	0x16, 0x2e, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_boxes_proto_rawDescOnce sync.Once
	file_boxes_proto_rawDescData = file_boxes_proto_rawDesc
)

func file_boxes_proto_rawDescGZIP() []byte {
	file_boxes_proto_rawDescOnce.Do(func() {
		file_boxes_proto_rawDescData = protoimpl.X.CompressGZIP(file_boxes_proto_rawDescData)
	})
	return file_boxes_proto_rawDescData
}

var file_boxes_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_boxes_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_boxes_proto_goTypes = []interface{}{
	(ColumnType)(0),         // 0: boxes.ColumnType
	(*Empty)(nil),           // 1: boxes.Empty
	(*TableName)(nil),       // 2: boxes.TableName
	(*TableNames)(nil),      // 3: boxes.TableNames
	(*TableSchemas)(nil),    // 4: boxes.TableSchemas
	(*TableSchema)(nil),     // 5: boxes.TableSchema
	(*ColumnSchema)(nil),    // 6: boxes.ColumnSchema
	(*Table)(nil),           // 7: boxes.Table
	(*ColumnValues)(nil),    // 8: boxes.ColumnValues
	(*DoubleList)(nil),      // 9: boxes.DoubleList
	(*DoubleValue)(nil),     // 10: boxes.DoubleValue
	(*Query)(nil),           // 11: boxes.Query
	(*ConfigFile)(nil),      // 12: boxes.ConfigFile
	(*ChartCollection)(nil), // 13: boxes.ChartCollection
	(*Chart)(nil),           // 14: boxes.Chart
	(*Plot)(nil),            // 15: boxes.Plot
	(*PlotInfo)(nil),        // 16: boxes.PlotInfo
	(*ChartInfo)(nil),       // 17: boxes.ChartInfo
	(*PlotName)(nil),        // 18: boxes.PlotName
	(*ChartName)(nil),       // 19: boxes.ChartName
	(*PlotValues)(nil),      // 20: boxes.PlotValues
	(*TableCollection)(nil), // 21: boxes.TableCollection
	(*TableInfo)(nil),       // 22: boxes.TableInfo
}
var file_boxes_proto_depIdxs = []int32{
	5,  // 0: boxes.TableSchemas.table_schemas:type_name -> boxes.TableSchema
	6,  // 1: boxes.TableSchema.column_schemas:type_name -> boxes.ColumnSchema
	0,  // 2: boxes.ColumnSchema.type:type_name -> boxes.ColumnType
	8,  // 3: boxes.Table.columns:type_name -> boxes.ColumnValues
	0,  // 4: boxes.Query.column_types:type_name -> boxes.ColumnType
	14, // 5: boxes.ChartCollection.charts:type_name -> boxes.Chart
	15, // 6: boxes.Chart.plots:type_name -> boxes.Plot
	15, // 7: boxes.PlotInfo.plot:type_name -> boxes.Plot
	14, // 8: boxes.ChartInfo.chart:type_name -> boxes.Chart
	16, // 9: boxes.ChartInfo.plotInfos:type_name -> boxes.PlotInfo
	22, // 10: boxes.TableCollection.table:type_name -> boxes.TableInfo
	5,  // 11: boxes.TableInfo.schema:type_name -> boxes.TableSchema
	1,  // 12: boxes.Connector.GetTableNames:input_type -> boxes.Empty
	3,  // 13: boxes.Connector.GetTableSchemas:input_type -> boxes.TableNames
	2,  // 14: boxes.Connector.GetTable:input_type -> boxes.TableName
	9,  // 15: boxes.Algorithms.Max:input_type -> boxes.DoubleList
	9,  // 16: boxes.Algorithms.Min:input_type -> boxes.DoubleList
	9,  // 17: boxes.Algorithms.Average:input_type -> boxes.DoubleList
	9,  // 18: boxes.Algorithms.Median:input_type -> boxes.DoubleList
	11, // 19: boxes.DataEngine.ExecuteQuery:input_type -> boxes.Query
	12, // 20: boxes.Backend.Initialise:input_type -> boxes.ConfigFile
	1,  // 21: boxes.Backend.GetCharts:input_type -> boxes.Empty
	18, // 22: boxes.Backend.GetPlotValues:input_type -> boxes.PlotName
	1,  // 23: boxes.Backend.GetLoadedTables:input_type -> boxes.Empty
	1,  // 24: boxes.Backend.GetAllTableNames:input_type -> boxes.Empty
	3,  // 25: boxes.Backend.GetTableSchemas:input_type -> boxes.TableNames
	2,  // 26: boxes.Backend.GetTable:input_type -> boxes.TableName
	17, // 27: boxes.Backend.AddChart:input_type -> boxes.ChartInfo
	19, // 28: boxes.Backend.RemoveChart:input_type -> boxes.ChartName
	2,  // 29: boxes.Backend.LoadTable:input_type -> boxes.TableName
	2,  // 30: boxes.Backend.UnloadTable:input_type -> boxes.TableName
	3,  // 31: boxes.Connector.GetTableNames:output_type -> boxes.TableNames
	4,  // 32: boxes.Connector.GetTableSchemas:output_type -> boxes.TableSchemas
	7,  // 33: boxes.Connector.GetTable:output_type -> boxes.Table
	10, // 34: boxes.Algorithms.Max:output_type -> boxes.DoubleValue
	10, // 35: boxes.Algorithms.Min:output_type -> boxes.DoubleValue
	10, // 36: boxes.Algorithms.Average:output_type -> boxes.DoubleValue
	10, // 37: boxes.Algorithms.Median:output_type -> boxes.DoubleValue
	7,  // 38: boxes.DataEngine.ExecuteQuery:output_type -> boxes.Table
	1,  // 39: boxes.Backend.Initialise:output_type -> boxes.Empty
	13, // 40: boxes.Backend.GetCharts:output_type -> boxes.ChartCollection
	20, // 41: boxes.Backend.GetPlotValues:output_type -> boxes.PlotValues
	21, // 42: boxes.Backend.GetLoadedTables:output_type -> boxes.TableCollection
	3,  // 43: boxes.Backend.GetAllTableNames:output_type -> boxes.TableNames
	4,  // 44: boxes.Backend.GetTableSchemas:output_type -> boxes.TableSchemas
	7,  // 45: boxes.Backend.GetTable:output_type -> boxes.Table
	1,  // 46: boxes.Backend.AddChart:output_type -> boxes.Empty
	1,  // 47: boxes.Backend.RemoveChart:output_type -> boxes.Empty
	21, // 48: boxes.Backend.LoadTable:output_type -> boxes.TableCollection
	21, // 49: boxes.Backend.UnloadTable:output_type -> boxes.TableCollection
	31, // [31:50] is the sub-list for method output_type
	12, // [12:31] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_boxes_proto_init() }
func file_boxes_proto_init() {
	if File_boxes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_boxes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSchemas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlotName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlotValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boxes_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_boxes_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_boxes_proto_goTypes,
		DependencyIndexes: file_boxes_proto_depIdxs,
		EnumInfos:         file_boxes_proto_enumTypes,
		MessageInfos:      file_boxes_proto_msgTypes,
	}.Build()
	File_boxes_proto = out.File
	file_boxes_proto_rawDesc = nil
	file_boxes_proto_goTypes = nil
	file_boxes_proto_depIdxs = nil
}
