//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: boxes.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import GRPC
import NIO
import NIOHTTP1
import SwiftProtobuf


/// Usage: instantiate Boxes_ConnectorClient, then call methods of this protocol to make API calls.
internal protocol Boxes_ConnectorClientProtocol: GRPCClient {
  func getTableNames(
    _ request: Boxes_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_Empty, Boxes_TableNames>

  func getTableSchemas(
    _ request: Boxes_TableNames,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_TableNames, Boxes_TableSchemas>

  func getTable(
    _ request: Boxes_TableName,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_TableName, Boxes_Table>

}

extension Boxes_ConnectorClientProtocol {

  /// Get table schemas
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTableNames.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTableNames(
    _ request: Boxes_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_Empty, Boxes_TableNames> {
    return self.makeUnaryCall(
      path: "/boxes.Connector/GetTableNames",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Get table schemas
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTableSchemas.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTableSchemas(
    _ request: Boxes_TableNames,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_TableNames, Boxes_TableSchemas> {
    return self.makeUnaryCall(
      path: "/boxes.Connector/GetTableSchemas",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Get table contents
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getTable(
    _ request: Boxes_TableName,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_TableName, Boxes_Table> {
    return self.makeUnaryCall(
      path: "/boxes.Connector/GetTable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

internal final class Boxes_ConnectorClient: Boxes_ConnectorClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions

  /// Creates a client for the boxes.Connector service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  internal init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// Usage: instantiate Boxes_AlgorithmsClient, then call methods of this protocol to make API calls.
internal protocol Boxes_AlgorithmsClientProtocol: GRPCClient {
  func max(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue>

  func min(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue>

  func average(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue>

  func median(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue>

}

extension Boxes_AlgorithmsClientProtocol {

  /// Unary call to Max
  ///
  /// - Parameters:
  ///   - request: Request to send to Max.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func max(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue> {
    return self.makeUnaryCall(
      path: "/boxes.Algorithms/Max",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to Min
  ///
  /// - Parameters:
  ///   - request: Request to send to Min.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func min(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue> {
    return self.makeUnaryCall(
      path: "/boxes.Algorithms/Min",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to Average
  ///
  /// - Parameters:
  ///   - request: Request to send to Average.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func average(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue> {
    return self.makeUnaryCall(
      path: "/boxes.Algorithms/Average",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to Median
  ///
  /// - Parameters:
  ///   - request: Request to send to Median.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func median(
    _ request: Boxes_DoubleList,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_DoubleList, Boxes_DoubleValue> {
    return self.makeUnaryCall(
      path: "/boxes.Algorithms/Median",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

internal final class Boxes_AlgorithmsClient: Boxes_AlgorithmsClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions

  /// Creates a client for the boxes.Algorithms service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  internal init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// Usage: instantiate Boxes_DataEngineClient, then call methods of this protocol to make API calls.
internal protocol Boxes_DataEngineClientProtocol: GRPCClient {
  func executeQuery(
    _ request: Boxes_Query,
    callOptions: CallOptions?
  ) -> UnaryCall<Boxes_Query, Boxes_Table>

}

extension Boxes_DataEngineClientProtocol {

  /// Plot x antal axlar
  /// Axel kategorisk eller numerisk
  ///
  /// - Parameters:
  ///   - request: Request to send to ExecuteQuery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func executeQuery(
    _ request: Boxes_Query,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Boxes_Query, Boxes_Table> {
    return self.makeUnaryCall(
      path: "/boxes.DataEngine/ExecuteQuery",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

internal final class Boxes_DataEngineClient: Boxes_DataEngineClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions

  /// Creates a client for the boxes.DataEngine service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  internal init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}


// Provides conformance to `GRPCPayload`
extension Boxes_Empty: GRPCProtobufPayload {}
extension Boxes_TableName: GRPCProtobufPayload {}
extension Boxes_TableNames: GRPCProtobufPayload {}
extension Boxes_TableSchemas: GRPCProtobufPayload {}
extension Boxes_TableSchema: GRPCProtobufPayload {}
extension Boxes_ColumnSchema: GRPCProtobufPayload {}
extension Boxes_Table: GRPCProtobufPayload {}
extension Boxes_ColumnValues: GRPCProtobufPayload {}
extension Boxes_DoubleList: GRPCProtobufPayload {}
extension Boxes_DoubleValue: GRPCProtobufPayload {}
extension Boxes_Query: GRPCProtobufPayload {}
