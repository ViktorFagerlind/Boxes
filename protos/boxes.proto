syntax = "proto3";

package boxes;

// ---------------------------------------------------------------------------------------------------------------------

service Connector {
  // Get table schemas
  rpc GetTableNames (Empty)         returns (TableNames) {}

  // Get table schemas
  rpc GetTableSchemas (TableNames)  returns (TableSchemas) {}

  // Get table contents
  rpc GetTable (TableName)          returns (Table) {}
}
  
message Empty {
}

message TableName {
  string name = 1;
}

message TableNames {
  repeated string table_names = 1;
}

message TableSchemas {
  repeated TableSchema table_schemas = 1;
}

message TableSchema {
  repeated ColumnSchema column_schemas = 1;
}

enum ColumnType {
  UNUSED  = 0;
  INTEGER = 1;
  REAL    = 2;
  STRING  = 3;
}

message ColumnSchema {
  string      name = 1;
  ColumnType  type = 2;
}

message Table {
  repeated ColumnValues columns = 1;
}

message ColumnValues {
  repeated string str_values = 1;
  repeated double num_values = 2;
}

// ---------------------------------------------------------------------------------------------------------------------

service Algorithms {
  rpc Max (DoubleList)      returns (DoubleValue) {}
  rpc Min (DoubleList)      returns (DoubleValue) {}
  rpc Average (DoubleList)  returns (DoubleValue) {}
  rpc Median (DoubleList)   returns (DoubleValue) {}
}

message DoubleList {
  repeated double values = 1;
}

message DoubleValue {
  double value = 1;
}

// ---------------------------------------------------------------------------------------------------------------------

// 
service DataEngine {
  // Data engine känner till alla tabeller i alla connectorer
  // Den håller en tabell med alla tabeller och huruvida de är laddade eller ej
  // Den laddar tabeller till en sqlite in memory databas vid behov, mha namnkonvention borde vi kunna hitta tabeller i queries

  // Plot x antal axlar
  // Axel kategorisk eller numerisk
  rpc ExecuteQuery (Query) returns (Table) {}
}


message Query {
  string q = 1;
}

